import TextInput from './textinput.js';

class Form3 extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      cardNumber: '',
      expire: '',
      cvv: '',
      zip: '',
      formNum: 'form3'
    };
    this.handleInput = this.handleInput.bind(this);
    this.handleSubmit = this.handleSubmit.bind(this);
  }

  handleInput(event) {
    const target = event.target;
    const value = target.value;
    const property = target.name;
    let newState = Object.assign({}, this.state);
    newState[property] = value;
    console.log(newState);
    this.setState(newState);
  }

  handleSubmit(event) {
    event.preventDefault();
    this.props.completePurchase(this.state);
  }

  render() {
    let label = ['Credit Cart Number: ', 'Expiration Date: ', 'CVV: ', 'Zip Code: '];
    let properties = ['cardNumber', 'expire', 'cvv', 'zip'];
    let types = ['number', 'text', 'number', 'number'];
    return /*#__PURE__*/React.createElement("form", {
      onSubmit: this.handleSubmit
    }, /*#__PURE__*/React.createElement("h1", null, "Form 3"), label.map((input, index) => /*#__PURE__*/React.createElement(TextInput, {
      name: properties[index],
      value: this.state[properties[index]],
      inputType: types[index],
      label: label[index],
      change: this.handleInput,
      key: index
    })), /*#__PURE__*/React.createElement("button", null, "Purchase"));
  }

}

export default Form3;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL2NsaWVudC9mb3JtMy5qc3giXSwibmFtZXMiOlsiVGV4dElucHV0IiwiRm9ybTMiLCJSZWFjdCIsIkNvbXBvbmVudCIsImNvbnN0cnVjdG9yIiwicHJvcHMiLCJzdGF0ZSIsImNhcmROdW1iZXIiLCJleHBpcmUiLCJjdnYiLCJ6aXAiLCJmb3JtTnVtIiwiaGFuZGxlSW5wdXQiLCJiaW5kIiwiaGFuZGxlU3VibWl0IiwiZXZlbnQiLCJ0YXJnZXQiLCJ2YWx1ZSIsInByb3BlcnR5IiwibmFtZSIsIm5ld1N0YXRlIiwiT2JqZWN0IiwiYXNzaWduIiwiY29uc29sZSIsImxvZyIsInNldFN0YXRlIiwicHJldmVudERlZmF1bHQiLCJjb21wbGV0ZVB1cmNoYXNlIiwicmVuZGVyIiwibGFiZWwiLCJwcm9wZXJ0aWVzIiwidHlwZXMiLCJtYXAiLCJpbnB1dCIsImluZGV4Il0sIm1hcHBpbmdzIjoiQUFBQSxPQUFPQSxTQUFQLE1BQXNCLGdCQUF0Qjs7QUFFQSxNQUFNQyxLQUFOLFNBQW9CQyxLQUFLLENBQUNDLFNBQTFCLENBQW9DO0FBQ2xDQyxFQUFBQSxXQUFXLENBQUVDLEtBQUYsRUFBUztBQUNsQixVQUFPQSxLQUFQO0FBQ0EsU0FBS0MsS0FBTCxHQUFhO0FBQ1hDLE1BQUFBLFVBQVUsRUFBRSxFQUREO0FBRVhDLE1BQUFBLE1BQU0sRUFBRSxFQUZHO0FBR1hDLE1BQUFBLEdBQUcsRUFBRSxFQUhNO0FBSVhDLE1BQUFBLEdBQUcsRUFBRSxFQUpNO0FBS1hDLE1BQUFBLE9BQU8sRUFBRTtBQUxFLEtBQWI7QUFPQSxTQUFLQyxXQUFMLEdBQW1CLEtBQUtBLFdBQUwsQ0FBaUJDLElBQWpCLENBQXNCLElBQXRCLENBQW5CO0FBQ0EsU0FBS0MsWUFBTCxHQUFvQixLQUFLQSxZQUFMLENBQWtCRCxJQUFsQixDQUF1QixJQUF2QixDQUFwQjtBQUNEOztBQUNERCxFQUFBQSxXQUFXLENBQUVHLEtBQUYsRUFBUztBQUNsQixVQUFNQyxNQUFNLEdBQUdELEtBQUssQ0FBQ0MsTUFBckI7QUFDQSxVQUFNQyxLQUFLLEdBQUdELE1BQU0sQ0FBQ0MsS0FBckI7QUFDQSxVQUFNQyxRQUFRLEdBQUdGLE1BQU0sQ0FBQ0csSUFBeEI7QUFDQSxRQUFJQyxRQUFRLEdBQUdDLE1BQU0sQ0FBQ0MsTUFBUCxDQUFjLEVBQWQsRUFBa0IsS0FBS2hCLEtBQXZCLENBQWY7QUFDQWMsSUFBQUEsUUFBUSxDQUFDRixRQUFELENBQVIsR0FBcUJELEtBQXJCO0FBQ0FNLElBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZSixRQUFaO0FBQ0EsU0FBS0ssUUFBTCxDQUFjTCxRQUFkO0FBQ0Q7O0FBRUROLEVBQUFBLFlBQVksQ0FBRUMsS0FBRixFQUFTO0FBQ25CQSxJQUFBQSxLQUFLLENBQUNXLGNBQU47QUFDQSxTQUFLckIsS0FBTCxDQUFXc0IsZ0JBQVgsQ0FBNEIsS0FBS3JCLEtBQWpDO0FBQ0Q7O0FBRURzQixFQUFBQSxNQUFNLEdBQUk7QUFDUixRQUFJQyxLQUFLLEdBQUcsQ0FBQyxzQkFBRCxFQUF5QixtQkFBekIsRUFBOEMsT0FBOUMsRUFBdUQsWUFBdkQsQ0FBWjtBQUNBLFFBQUlDLFVBQVUsR0FBRyxDQUFDLFlBQUQsRUFBZSxRQUFmLEVBQXlCLEtBQXpCLEVBQWdDLEtBQWhDLENBQWpCO0FBQ0EsUUFBSUMsS0FBSyxHQUFHLENBQUMsUUFBRCxFQUFXLE1BQVgsRUFBbUIsUUFBbkIsRUFBNkIsUUFBN0IsQ0FBWjtBQUNBLHdCQUVFO0FBQU0sTUFBQSxRQUFRLEVBQUUsS0FBS2pCO0FBQXJCLG9CQUNBLHlDQURBLEVBRUNlLEtBQUssQ0FBQ0csR0FBTixDQUFVLENBQUNDLEtBQUQsRUFBUUMsS0FBUixrQkFDVCxvQkFBQyxTQUFEO0FBQVcsTUFBQSxJQUFJLEVBQUVKLFVBQVUsQ0FBQ0ksS0FBRCxDQUEzQjtBQUNBLE1BQUEsS0FBSyxFQUFFLEtBQUs1QixLQUFMLENBQVd3QixVQUFVLENBQUNJLEtBQUQsQ0FBckIsQ0FEUDtBQUVBLE1BQUEsU0FBUyxFQUFFSCxLQUFLLENBQUNHLEtBQUQsQ0FGaEI7QUFHQSxNQUFBLEtBQUssRUFBRUwsS0FBSyxDQUFDSyxLQUFELENBSFo7QUFJQSxNQUFBLE1BQU0sRUFBRSxLQUFLdEIsV0FKYjtBQUtBLE1BQUEsR0FBRyxFQUFFc0I7QUFMTCxNQURELENBRkQsZUFXRSwrQ0FYRixDQUZGO0FBZ0JEOztBQWhEaUM7O0FBb0RwQyxlQUFlakMsS0FBZiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBUZXh0SW5wdXQgZnJvbSAnLi90ZXh0aW5wdXQuanMnO1xuXG5jbGFzcyBGb3JtMyBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gIGNvbnN0cnVjdG9yIChwcm9wcykge1xuICAgIHN1cGVyIChwcm9wcyk7XG4gICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgIGNhcmROdW1iZXI6ICcnLFxuICAgICAgZXhwaXJlOiAnJyxcbiAgICAgIGN2djogJycsXG4gICAgICB6aXA6ICcnLFxuICAgICAgZm9ybU51bTogJ2Zvcm0zJ1xuICAgIH1cbiAgICB0aGlzLmhhbmRsZUlucHV0ID0gdGhpcy5oYW5kbGVJbnB1dC5iaW5kKHRoaXMpO1xuICAgIHRoaXMuaGFuZGxlU3VibWl0ID0gdGhpcy5oYW5kbGVTdWJtaXQuYmluZCh0aGlzKTtcbiAgfVxuICBoYW5kbGVJbnB1dCAoZXZlbnQpIHtcbiAgICBjb25zdCB0YXJnZXQgPSBldmVudC50YXJnZXQ7XG4gICAgY29uc3QgdmFsdWUgPSB0YXJnZXQudmFsdWU7XG4gICAgY29uc3QgcHJvcGVydHkgPSB0YXJnZXQubmFtZTtcbiAgICBsZXQgbmV3U3RhdGUgPSBPYmplY3QuYXNzaWduKHt9LCB0aGlzLnN0YXRlKTtcbiAgICBuZXdTdGF0ZVtwcm9wZXJ0eV0gPSB2YWx1ZTtcbiAgICBjb25zb2xlLmxvZyhuZXdTdGF0ZSk7XG4gICAgdGhpcy5zZXRTdGF0ZShuZXdTdGF0ZSk7XG4gIH1cblxuICBoYW5kbGVTdWJtaXQgKGV2ZW50KSB7XG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICB0aGlzLnByb3BzLmNvbXBsZXRlUHVyY2hhc2UodGhpcy5zdGF0ZSk7XG4gIH1cblxuICByZW5kZXIgKCkge1xuICAgIGxldCBsYWJlbCA9IFsnQ3JlZGl0IENhcnQgTnVtYmVyOiAnLCAnRXhwaXJhdGlvbiBEYXRlOiAnLCAnQ1ZWOiAnLCAnWmlwIENvZGU6ICddO1xuICAgIGxldCBwcm9wZXJ0aWVzID0gWydjYXJkTnVtYmVyJywgJ2V4cGlyZScsICdjdnYnLCAnemlwJ107XG4gICAgbGV0IHR5cGVzID0gWydudW1iZXInLCAndGV4dCcsICdudW1iZXInLCAnbnVtYmVyJ107XG4gICAgcmV0dXJuIChcblxuICAgICAgPGZvcm0gb25TdWJtaXQ9e3RoaXMuaGFuZGxlU3VibWl0fT5cbiAgICAgIDxoMT5Gb3JtIDM8L2gxPlxuICAgICAge2xhYmVsLm1hcCgoaW5wdXQsIGluZGV4KSA9PlxuICAgICAgICA8VGV4dElucHV0IG5hbWU9e3Byb3BlcnRpZXNbaW5kZXhdfVxuICAgICAgICB2YWx1ZT17dGhpcy5zdGF0ZVtwcm9wZXJ0aWVzW2luZGV4XV19XG4gICAgICAgIGlucHV0VHlwZT17dHlwZXNbaW5kZXhdfVxuICAgICAgICBsYWJlbD17bGFiZWxbaW5kZXhdfVxuICAgICAgICBjaGFuZ2U9e3RoaXMuaGFuZGxlSW5wdXR9XG4gICAgICAgIGtleT17aW5kZXh9XG4gICAgICAgIC8+XG4gICAgICAgICl9XG4gICAgICAgIDxidXR0b24+UHVyY2hhc2U8L2J1dHRvbj5cbiAgICAgIDwvZm9ybT5cbiAgICApXG4gIH1cblxufVxuXG5leHBvcnQgZGVmYXVsdCBGb3JtMzsiXX0=