import TextInput from './textinput.js';

class Form3 extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      cardNumber: '',
      expire: '',
      cvv: '',
      ccZip: '',
      formNum: 'form3'
    };
    this.handleInput = this.handleInput.bind(this);
    this.handleSubmit = this.handleSubmit.bind(this);
  }

  handleInput(event) {
    const target = event.target;
    const value = target.value;
    const property = target.name;
    let newState = Object.assign({}, this.state);
    newState[property] = value;
    this.setState(newState);
  }

  handleSubmit(event) {
    event.preventDefault();
    this.props.completePurchase(this.state);
  }

  render() {
    let label = ['Credit Cart Number: ', 'Expiration Date: ', 'CVV: ', 'Zip Code: '];
    let properties = ['cardNumber', 'expire', 'cvv', 'ccZip'];
    let types = ['number', 'text', 'number', 'number'];
    return /*#__PURE__*/React.createElement("form", {
      onSubmit: this.handleSubmit
    }, /*#__PURE__*/React.createElement("h1", null, "Form 3"), label.map((input, index) => /*#__PURE__*/React.createElement(TextInput, {
      name: properties[index],
      value: this.state[properties[index]],
      inputType: types[index],
      label: label[index],
      change: this.handleInput,
      key: index
    })), /*#__PURE__*/React.createElement("button", null, "Purchase"));
  }

}

export default Form3;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL2NsaWVudC9mb3JtMy5qc3giXSwibmFtZXMiOlsiVGV4dElucHV0IiwiRm9ybTMiLCJSZWFjdCIsIkNvbXBvbmVudCIsImNvbnN0cnVjdG9yIiwicHJvcHMiLCJzdGF0ZSIsImNhcmROdW1iZXIiLCJleHBpcmUiLCJjdnYiLCJjY1ppcCIsImZvcm1OdW0iLCJoYW5kbGVJbnB1dCIsImJpbmQiLCJoYW5kbGVTdWJtaXQiLCJldmVudCIsInRhcmdldCIsInZhbHVlIiwicHJvcGVydHkiLCJuYW1lIiwibmV3U3RhdGUiLCJPYmplY3QiLCJhc3NpZ24iLCJzZXRTdGF0ZSIsInByZXZlbnREZWZhdWx0IiwiY29tcGxldGVQdXJjaGFzZSIsInJlbmRlciIsImxhYmVsIiwicHJvcGVydGllcyIsInR5cGVzIiwibWFwIiwiaW5wdXQiLCJpbmRleCJdLCJtYXBwaW5ncyI6IkFBQUEsT0FBT0EsU0FBUCxNQUFzQixnQkFBdEI7O0FBRUEsTUFBTUMsS0FBTixTQUFvQkMsS0FBSyxDQUFDQyxTQUExQixDQUFvQztBQUNsQ0MsRUFBQUEsV0FBVyxDQUFFQyxLQUFGLEVBQVM7QUFDbEIsVUFBT0EsS0FBUDtBQUNBLFNBQUtDLEtBQUwsR0FBYTtBQUNYQyxNQUFBQSxVQUFVLEVBQUUsRUFERDtBQUVYQyxNQUFBQSxNQUFNLEVBQUUsRUFGRztBQUdYQyxNQUFBQSxHQUFHLEVBQUUsRUFITTtBQUlYQyxNQUFBQSxLQUFLLEVBQUUsRUFKSTtBQUtYQyxNQUFBQSxPQUFPLEVBQUU7QUFMRSxLQUFiO0FBT0EsU0FBS0MsV0FBTCxHQUFtQixLQUFLQSxXQUFMLENBQWlCQyxJQUFqQixDQUFzQixJQUF0QixDQUFuQjtBQUNBLFNBQUtDLFlBQUwsR0FBb0IsS0FBS0EsWUFBTCxDQUFrQkQsSUFBbEIsQ0FBdUIsSUFBdkIsQ0FBcEI7QUFDRDs7QUFDREQsRUFBQUEsV0FBVyxDQUFFRyxLQUFGLEVBQVM7QUFDbEIsVUFBTUMsTUFBTSxHQUFHRCxLQUFLLENBQUNDLE1BQXJCO0FBQ0EsVUFBTUMsS0FBSyxHQUFHRCxNQUFNLENBQUNDLEtBQXJCO0FBQ0EsVUFBTUMsUUFBUSxHQUFHRixNQUFNLENBQUNHLElBQXhCO0FBQ0EsUUFBSUMsUUFBUSxHQUFHQyxNQUFNLENBQUNDLE1BQVAsQ0FBYyxFQUFkLEVBQWtCLEtBQUtoQixLQUF2QixDQUFmO0FBQ0FjLElBQUFBLFFBQVEsQ0FBQ0YsUUFBRCxDQUFSLEdBQXFCRCxLQUFyQjtBQUNBLFNBQUtNLFFBQUwsQ0FBY0gsUUFBZDtBQUNEOztBQUVETixFQUFBQSxZQUFZLENBQUVDLEtBQUYsRUFBUztBQUNuQkEsSUFBQUEsS0FBSyxDQUFDUyxjQUFOO0FBQ0EsU0FBS25CLEtBQUwsQ0FBV29CLGdCQUFYLENBQTRCLEtBQUtuQixLQUFqQztBQUNEOztBQUVEb0IsRUFBQUEsTUFBTSxHQUFJO0FBQ1IsUUFBSUMsS0FBSyxHQUFHLENBQUMsc0JBQUQsRUFBeUIsbUJBQXpCLEVBQThDLE9BQTlDLEVBQXVELFlBQXZELENBQVo7QUFDQSxRQUFJQyxVQUFVLEdBQUcsQ0FBQyxZQUFELEVBQWUsUUFBZixFQUF5QixLQUF6QixFQUFnQyxPQUFoQyxDQUFqQjtBQUNBLFFBQUlDLEtBQUssR0FBRyxDQUFDLFFBQUQsRUFBVyxNQUFYLEVBQW1CLFFBQW5CLEVBQTZCLFFBQTdCLENBQVo7QUFDQSx3QkFFRTtBQUFNLE1BQUEsUUFBUSxFQUFFLEtBQUtmO0FBQXJCLG9CQUNBLHlDQURBLEVBRUNhLEtBQUssQ0FBQ0csR0FBTixDQUFVLENBQUNDLEtBQUQsRUFBUUMsS0FBUixrQkFDVCxvQkFBQyxTQUFEO0FBQVcsTUFBQSxJQUFJLEVBQUVKLFVBQVUsQ0FBQ0ksS0FBRCxDQUEzQjtBQUNBLE1BQUEsS0FBSyxFQUFFLEtBQUsxQixLQUFMLENBQVdzQixVQUFVLENBQUNJLEtBQUQsQ0FBckIsQ0FEUDtBQUVBLE1BQUEsU0FBUyxFQUFFSCxLQUFLLENBQUNHLEtBQUQsQ0FGaEI7QUFHQSxNQUFBLEtBQUssRUFBRUwsS0FBSyxDQUFDSyxLQUFELENBSFo7QUFJQSxNQUFBLE1BQU0sRUFBRSxLQUFLcEIsV0FKYjtBQUtBLE1BQUEsR0FBRyxFQUFFb0I7QUFMTCxNQURELENBRkQsZUFXRSwrQ0FYRixDQUZGO0FBZ0JEOztBQS9DaUM7O0FBbURwQyxlQUFlL0IsS0FBZiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBUZXh0SW5wdXQgZnJvbSAnLi90ZXh0aW5wdXQuanMnO1xuXG5jbGFzcyBGb3JtMyBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gIGNvbnN0cnVjdG9yIChwcm9wcykge1xuICAgIHN1cGVyIChwcm9wcyk7XG4gICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgIGNhcmROdW1iZXI6ICcnLFxuICAgICAgZXhwaXJlOiAnJyxcbiAgICAgIGN2djogJycsXG4gICAgICBjY1ppcDogJycsXG4gICAgICBmb3JtTnVtOiAnZm9ybTMnXG4gICAgfVxuICAgIHRoaXMuaGFuZGxlSW5wdXQgPSB0aGlzLmhhbmRsZUlucHV0LmJpbmQodGhpcyk7XG4gICAgdGhpcy5oYW5kbGVTdWJtaXQgPSB0aGlzLmhhbmRsZVN1Ym1pdC5iaW5kKHRoaXMpO1xuICB9XG4gIGhhbmRsZUlucHV0IChldmVudCkge1xuICAgIGNvbnN0IHRhcmdldCA9IGV2ZW50LnRhcmdldDtcbiAgICBjb25zdCB2YWx1ZSA9IHRhcmdldC52YWx1ZTtcbiAgICBjb25zdCBwcm9wZXJ0eSA9IHRhcmdldC5uYW1lO1xuICAgIGxldCBuZXdTdGF0ZSA9IE9iamVjdC5hc3NpZ24oe30sIHRoaXMuc3RhdGUpO1xuICAgIG5ld1N0YXRlW3Byb3BlcnR5XSA9IHZhbHVlO1xuICAgIHRoaXMuc2V0U3RhdGUobmV3U3RhdGUpO1xuICB9XG5cbiAgaGFuZGxlU3VibWl0IChldmVudCkge1xuICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgdGhpcy5wcm9wcy5jb21wbGV0ZVB1cmNoYXNlKHRoaXMuc3RhdGUpO1xuICB9XG5cbiAgcmVuZGVyICgpIHtcbiAgICBsZXQgbGFiZWwgPSBbJ0NyZWRpdCBDYXJ0IE51bWJlcjogJywgJ0V4cGlyYXRpb24gRGF0ZTogJywgJ0NWVjogJywgJ1ppcCBDb2RlOiAnXTtcbiAgICBsZXQgcHJvcGVydGllcyA9IFsnY2FyZE51bWJlcicsICdleHBpcmUnLCAnY3Z2JywgJ2NjWmlwJ107XG4gICAgbGV0IHR5cGVzID0gWydudW1iZXInLCAndGV4dCcsICdudW1iZXInLCAnbnVtYmVyJ107XG4gICAgcmV0dXJuIChcblxuICAgICAgPGZvcm0gb25TdWJtaXQ9e3RoaXMuaGFuZGxlU3VibWl0fT5cbiAgICAgIDxoMT5Gb3JtIDM8L2gxPlxuICAgICAge2xhYmVsLm1hcCgoaW5wdXQsIGluZGV4KSA9PlxuICAgICAgICA8VGV4dElucHV0IG5hbWU9e3Byb3BlcnRpZXNbaW5kZXhdfVxuICAgICAgICB2YWx1ZT17dGhpcy5zdGF0ZVtwcm9wZXJ0aWVzW2luZGV4XV19XG4gICAgICAgIGlucHV0VHlwZT17dHlwZXNbaW5kZXhdfVxuICAgICAgICBsYWJlbD17bGFiZWxbaW5kZXhdfVxuICAgICAgICBjaGFuZ2U9e3RoaXMuaGFuZGxlSW5wdXR9XG4gICAgICAgIGtleT17aW5kZXh9XG4gICAgICAgIC8+XG4gICAgICAgICl9XG4gICAgICAgIDxidXR0b24+UHVyY2hhc2U8L2J1dHRvbj5cbiAgICAgIDwvZm9ybT5cbiAgICApXG4gIH1cblxufVxuXG5leHBvcnQgZGVmYXVsdCBGb3JtMzsiXX0=