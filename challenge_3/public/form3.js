import TextInput from './textinput.js';

class Form3 extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      cardNumber: '',
      expire: '',
      cvv: '',
      ccZip: '',
      formNum: 'form3'
    };
    this.handleInput = this.handleInput.bind(this);
    this.handleSubmit = this.handleSubmit.bind(this);
  }

  handleInput(event) {
    const target = event.target;
    const value = target.value;
    const property = target.name;
    let newState = Object.assign({}, this.state);
    newState[property] = value;
    console.log(newState);
    this.setState(newState);
  }

  handleSubmit(event) {
    event.preventDefault();
    this.props.completePurchase(this.state);
  }

  render() {
    let label = ['Credit Cart Number: ', 'Expiration Date: ', 'CVV: ', 'Zip Code: '];
    let properties = ['cardNumber', 'expire', 'cvv', 'ccZip'];
    let types = ['number', 'text', 'number', 'number'];
    return /*#__PURE__*/React.createElement("form", {
      onSubmit: this.handleSubmit
    }, /*#__PURE__*/React.createElement("h1", null, "Form 3"), label.map((input, index) => /*#__PURE__*/React.createElement(TextInput, {
      name: properties[index],
      value: this.state[properties[index]],
      inputType: types[index],
      label: label[index],
      change: this.handleInput,
      key: index
    })), /*#__PURE__*/React.createElement("button", null, "Purchase"));
  }

}

export default Form3;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL2NsaWVudC9mb3JtMy5qc3giXSwibmFtZXMiOlsiVGV4dElucHV0IiwiRm9ybTMiLCJSZWFjdCIsIkNvbXBvbmVudCIsImNvbnN0cnVjdG9yIiwicHJvcHMiLCJzdGF0ZSIsImNhcmROdW1iZXIiLCJleHBpcmUiLCJjdnYiLCJjY1ppcCIsImZvcm1OdW0iLCJoYW5kbGVJbnB1dCIsImJpbmQiLCJoYW5kbGVTdWJtaXQiLCJldmVudCIsInRhcmdldCIsInZhbHVlIiwicHJvcGVydHkiLCJuYW1lIiwibmV3U3RhdGUiLCJPYmplY3QiLCJhc3NpZ24iLCJjb25zb2xlIiwibG9nIiwic2V0U3RhdGUiLCJwcmV2ZW50RGVmYXVsdCIsImNvbXBsZXRlUHVyY2hhc2UiLCJyZW5kZXIiLCJsYWJlbCIsInByb3BlcnRpZXMiLCJ0eXBlcyIsIm1hcCIsImlucHV0IiwiaW5kZXgiXSwibWFwcGluZ3MiOiJBQUFBLE9BQU9BLFNBQVAsTUFBc0IsZ0JBQXRCOztBQUVBLE1BQU1DLEtBQU4sU0FBb0JDLEtBQUssQ0FBQ0MsU0FBMUIsQ0FBb0M7QUFDbENDLEVBQUFBLFdBQVcsQ0FBRUMsS0FBRixFQUFTO0FBQ2xCLFVBQU9BLEtBQVA7QUFDQSxTQUFLQyxLQUFMLEdBQWE7QUFDWEMsTUFBQUEsVUFBVSxFQUFFLEVBREQ7QUFFWEMsTUFBQUEsTUFBTSxFQUFFLEVBRkc7QUFHWEMsTUFBQUEsR0FBRyxFQUFFLEVBSE07QUFJWEMsTUFBQUEsS0FBSyxFQUFFLEVBSkk7QUFLWEMsTUFBQUEsT0FBTyxFQUFFO0FBTEUsS0FBYjtBQU9BLFNBQUtDLFdBQUwsR0FBbUIsS0FBS0EsV0FBTCxDQUFpQkMsSUFBakIsQ0FBc0IsSUFBdEIsQ0FBbkI7QUFDQSxTQUFLQyxZQUFMLEdBQW9CLEtBQUtBLFlBQUwsQ0FBa0JELElBQWxCLENBQXVCLElBQXZCLENBQXBCO0FBQ0Q7O0FBQ0RELEVBQUFBLFdBQVcsQ0FBRUcsS0FBRixFQUFTO0FBQ2xCLFVBQU1DLE1BQU0sR0FBR0QsS0FBSyxDQUFDQyxNQUFyQjtBQUNBLFVBQU1DLEtBQUssR0FBR0QsTUFBTSxDQUFDQyxLQUFyQjtBQUNBLFVBQU1DLFFBQVEsR0FBR0YsTUFBTSxDQUFDRyxJQUF4QjtBQUNBLFFBQUlDLFFBQVEsR0FBR0MsTUFBTSxDQUFDQyxNQUFQLENBQWMsRUFBZCxFQUFrQixLQUFLaEIsS0FBdkIsQ0FBZjtBQUNBYyxJQUFBQSxRQUFRLENBQUNGLFFBQUQsQ0FBUixHQUFxQkQsS0FBckI7QUFDQU0sSUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlKLFFBQVo7QUFDQSxTQUFLSyxRQUFMLENBQWNMLFFBQWQ7QUFDRDs7QUFFRE4sRUFBQUEsWUFBWSxDQUFFQyxLQUFGLEVBQVM7QUFDbkJBLElBQUFBLEtBQUssQ0FBQ1csY0FBTjtBQUNBLFNBQUtyQixLQUFMLENBQVdzQixnQkFBWCxDQUE0QixLQUFLckIsS0FBakM7QUFDRDs7QUFFRHNCLEVBQUFBLE1BQU0sR0FBSTtBQUNSLFFBQUlDLEtBQUssR0FBRyxDQUFDLHNCQUFELEVBQXlCLG1CQUF6QixFQUE4QyxPQUE5QyxFQUF1RCxZQUF2RCxDQUFaO0FBQ0EsUUFBSUMsVUFBVSxHQUFHLENBQUMsWUFBRCxFQUFlLFFBQWYsRUFBeUIsS0FBekIsRUFBZ0MsT0FBaEMsQ0FBakI7QUFDQSxRQUFJQyxLQUFLLEdBQUcsQ0FBQyxRQUFELEVBQVcsTUFBWCxFQUFtQixRQUFuQixFQUE2QixRQUE3QixDQUFaO0FBQ0Esd0JBRUU7QUFBTSxNQUFBLFFBQVEsRUFBRSxLQUFLakI7QUFBckIsb0JBQ0EseUNBREEsRUFFQ2UsS0FBSyxDQUFDRyxHQUFOLENBQVUsQ0FBQ0MsS0FBRCxFQUFRQyxLQUFSLGtCQUNULG9CQUFDLFNBQUQ7QUFBVyxNQUFBLElBQUksRUFBRUosVUFBVSxDQUFDSSxLQUFELENBQTNCO0FBQ0EsTUFBQSxLQUFLLEVBQUUsS0FBSzVCLEtBQUwsQ0FBV3dCLFVBQVUsQ0FBQ0ksS0FBRCxDQUFyQixDQURQO0FBRUEsTUFBQSxTQUFTLEVBQUVILEtBQUssQ0FBQ0csS0FBRCxDQUZoQjtBQUdBLE1BQUEsS0FBSyxFQUFFTCxLQUFLLENBQUNLLEtBQUQsQ0FIWjtBQUlBLE1BQUEsTUFBTSxFQUFFLEtBQUt0QixXQUpiO0FBS0EsTUFBQSxHQUFHLEVBQUVzQjtBQUxMLE1BREQsQ0FGRCxlQVdFLCtDQVhGLENBRkY7QUFnQkQ7O0FBaERpQzs7QUFvRHBDLGVBQWVqQyxLQUFmIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFRleHRJbnB1dCBmcm9tICcuL3RleHRpbnB1dC5qcyc7XG5cbmNsYXNzIEZvcm0zIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgY29uc3RydWN0b3IgKHByb3BzKSB7XG4gICAgc3VwZXIgKHByb3BzKTtcbiAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgY2FyZE51bWJlcjogJycsXG4gICAgICBleHBpcmU6ICcnLFxuICAgICAgY3Z2OiAnJyxcbiAgICAgIGNjWmlwOiAnJyxcbiAgICAgIGZvcm1OdW06ICdmb3JtMydcbiAgICB9XG4gICAgdGhpcy5oYW5kbGVJbnB1dCA9IHRoaXMuaGFuZGxlSW5wdXQuYmluZCh0aGlzKTtcbiAgICB0aGlzLmhhbmRsZVN1Ym1pdCA9IHRoaXMuaGFuZGxlU3VibWl0LmJpbmQodGhpcyk7XG4gIH1cbiAgaGFuZGxlSW5wdXQgKGV2ZW50KSB7XG4gICAgY29uc3QgdGFyZ2V0ID0gZXZlbnQudGFyZ2V0O1xuICAgIGNvbnN0IHZhbHVlID0gdGFyZ2V0LnZhbHVlO1xuICAgIGNvbnN0IHByb3BlcnR5ID0gdGFyZ2V0Lm5hbWU7XG4gICAgbGV0IG5ld1N0YXRlID0gT2JqZWN0LmFzc2lnbih7fSwgdGhpcy5zdGF0ZSk7XG4gICAgbmV3U3RhdGVbcHJvcGVydHldID0gdmFsdWU7XG4gICAgY29uc29sZS5sb2cobmV3U3RhdGUpO1xuICAgIHRoaXMuc2V0U3RhdGUobmV3U3RhdGUpO1xuICB9XG5cbiAgaGFuZGxlU3VibWl0IChldmVudCkge1xuICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgdGhpcy5wcm9wcy5jb21wbGV0ZVB1cmNoYXNlKHRoaXMuc3RhdGUpO1xuICB9XG5cbiAgcmVuZGVyICgpIHtcbiAgICBsZXQgbGFiZWwgPSBbJ0NyZWRpdCBDYXJ0IE51bWJlcjogJywgJ0V4cGlyYXRpb24gRGF0ZTogJywgJ0NWVjogJywgJ1ppcCBDb2RlOiAnXTtcbiAgICBsZXQgcHJvcGVydGllcyA9IFsnY2FyZE51bWJlcicsICdleHBpcmUnLCAnY3Z2JywgJ2NjWmlwJ107XG4gICAgbGV0IHR5cGVzID0gWydudW1iZXInLCAndGV4dCcsICdudW1iZXInLCAnbnVtYmVyJ107XG4gICAgcmV0dXJuIChcblxuICAgICAgPGZvcm0gb25TdWJtaXQ9e3RoaXMuaGFuZGxlU3VibWl0fT5cbiAgICAgIDxoMT5Gb3JtIDM8L2gxPlxuICAgICAge2xhYmVsLm1hcCgoaW5wdXQsIGluZGV4KSA9PlxuICAgICAgICA8VGV4dElucHV0IG5hbWU9e3Byb3BlcnRpZXNbaW5kZXhdfVxuICAgICAgICB2YWx1ZT17dGhpcy5zdGF0ZVtwcm9wZXJ0aWVzW2luZGV4XV19XG4gICAgICAgIGlucHV0VHlwZT17dHlwZXNbaW5kZXhdfVxuICAgICAgICBsYWJlbD17bGFiZWxbaW5kZXhdfVxuICAgICAgICBjaGFuZ2U9e3RoaXMuaGFuZGxlSW5wdXR9XG4gICAgICAgIGtleT17aW5kZXh9XG4gICAgICAgIC8+XG4gICAgICAgICl9XG4gICAgICAgIDxidXR0b24+UHVyY2hhc2U8L2J1dHRvbj5cbiAgICAgIDwvZm9ybT5cbiAgICApXG4gIH1cblxufVxuXG5leHBvcnQgZGVmYXVsdCBGb3JtMzsiXX0=