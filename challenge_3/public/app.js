// import React from './react.development.js';
// import ReactDOM from './react-dom.development.js';
import Form1 from './form1.js';
import Form2 from './form2.js';
import Form3 from './form3.js'; // import axios from 'axios'

class App extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      page: 0,
      form1: {},
      form2: {},
      form3: {}
    };
    this.createClick = this.createClick.bind(this);
    this.handleNext = this.handleNext.bind(this);
    this.completePurchase = this.completePurchase.bind(this);
  }

  createClick() {
    this.setState(state => ({
      page: 1
    }));
  }

  handleNext(form) {
    let newState = Object.assign({}, this.state);
    newState[form.formNum] = form;
    newState.page++;
    this.setState(newState);
  }

  completePurchase(form) {
    let newState = Object.assign({}, this.state);
    newState[form.formNum] = form;
    newState.page = 0;
    let completePurchase = Object.assign({}, this.state.form1, this.state.form2, form);
    axios.post('/purchase', completePurchase).then(this.setState(newState)).catch(err => {
      console.log(err);
    });
  }

  render() {
    let page;

    if (this.state.page === 0) {
      page = /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement("h1", null, "Home Page"), /*#__PURE__*/React.createElement("button", {
        onClick: this.createClick
      }, "Create Checkout"));
    } else if (this.state.page === 1) {
      page = /*#__PURE__*/React.createElement(Form1, {
        handleNext: this.handleNext
      });
    } else if (this.state.page === 2) {
      page = /*#__PURE__*/React.createElement(Form2, {
        handleNext: this.handleNext
      });
    } else if (this.state.page === 3) {
      page = /*#__PURE__*/React.createElement(Form3, {
        completePurchase: this.completePurchase
      });
    }

    return /*#__PURE__*/React.createElement("div", null, page);
  }

}

ReactDOM.render( /*#__PURE__*/React.createElement(App, null), document.getElementById('app'));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL2NsaWVudC9hcHAuanN4Il0sIm5hbWVzIjpbIkZvcm0xIiwiRm9ybTIiLCJGb3JtMyIsIkFwcCIsIlJlYWN0IiwiQ29tcG9uZW50IiwiY29uc3RydWN0b3IiLCJwcm9wcyIsInN0YXRlIiwicGFnZSIsImZvcm0xIiwiZm9ybTIiLCJmb3JtMyIsImNyZWF0ZUNsaWNrIiwiYmluZCIsImhhbmRsZU5leHQiLCJjb21wbGV0ZVB1cmNoYXNlIiwic2V0U3RhdGUiLCJmb3JtIiwibmV3U3RhdGUiLCJPYmplY3QiLCJhc3NpZ24iLCJmb3JtTnVtIiwiYXhpb3MiLCJwb3N0IiwidGhlbiIsImNhdGNoIiwiZXJyIiwiY29uc29sZSIsImxvZyIsInJlbmRlciIsIlJlYWN0RE9NIiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBLE9BQU9BLEtBQVAsTUFBa0IsWUFBbEI7QUFDQSxPQUFPQyxLQUFQLE1BQWtCLFlBQWxCO0FBQ0EsT0FBT0MsS0FBUCxNQUFrQixZQUFsQixDLENBQ0E7O0FBRUEsTUFBTUMsR0FBTixTQUFrQkMsS0FBSyxDQUFDQyxTQUF4QixDQUFrQztBQUNoQ0MsRUFBQUEsV0FBVyxDQUFDQyxLQUFELEVBQVE7QUFDakIsVUFBTUEsS0FBTjtBQUNFLFNBQUtDLEtBQUwsR0FBYTtBQUNYQyxNQUFBQSxJQUFJLEVBQUUsQ0FESztBQUVYQyxNQUFBQSxLQUFLLEVBQUUsRUFGSTtBQUdYQyxNQUFBQSxLQUFLLEVBQUUsRUFISTtBQUlYQyxNQUFBQSxLQUFLLEVBQUU7QUFKSSxLQUFiO0FBTUEsU0FBS0MsV0FBTCxHQUFtQixLQUFLQSxXQUFMLENBQWlCQyxJQUFqQixDQUFzQixJQUF0QixDQUFuQjtBQUNBLFNBQUtDLFVBQUwsR0FBa0IsS0FBS0EsVUFBTCxDQUFnQkQsSUFBaEIsQ0FBcUIsSUFBckIsQ0FBbEI7QUFDQSxTQUFLRSxnQkFBTCxHQUF3QixLQUFLQSxnQkFBTCxDQUFzQkYsSUFBdEIsQ0FBMkIsSUFBM0IsQ0FBeEI7QUFDSDs7QUFFREQsRUFBQUEsV0FBVyxHQUFJO0FBQ2IsU0FBS0ksUUFBTCxDQUFlVCxLQUFELEtBQVk7QUFDeEJDLE1BQUFBLElBQUksRUFBRTtBQURrQixLQUFaLENBQWQ7QUFHRDs7QUFFRE0sRUFBQUEsVUFBVSxDQUFFRyxJQUFGLEVBQVE7QUFDaEIsUUFBSUMsUUFBUSxHQUFHQyxNQUFNLENBQUNDLE1BQVAsQ0FBYyxFQUFkLEVBQWtCLEtBQUtiLEtBQXZCLENBQWY7QUFDQVcsSUFBQUEsUUFBUSxDQUFDRCxJQUFJLENBQUNJLE9BQU4sQ0FBUixHQUF5QkosSUFBekI7QUFDQUMsSUFBQUEsUUFBUSxDQUFDVixJQUFUO0FBQ0EsU0FBS1EsUUFBTCxDQUFjRSxRQUFkO0FBQ0Q7O0FBRURILEVBQUFBLGdCQUFnQixDQUFFRSxJQUFGLEVBQVE7QUFDdEIsUUFBSUMsUUFBUSxHQUFHQyxNQUFNLENBQUNDLE1BQVAsQ0FBYyxFQUFkLEVBQWtCLEtBQUtiLEtBQXZCLENBQWY7QUFDQVcsSUFBQUEsUUFBUSxDQUFDRCxJQUFJLENBQUNJLE9BQU4sQ0FBUixHQUF5QkosSUFBekI7QUFDQUMsSUFBQUEsUUFBUSxDQUFDVixJQUFULEdBQWdCLENBQWhCO0FBQ0EsUUFBSU8sZ0JBQWdCLEdBQUdJLE1BQU0sQ0FBQ0MsTUFBUCxDQUFjLEVBQWQsRUFBa0IsS0FBS2IsS0FBTCxDQUFXRSxLQUE3QixFQUFvQyxLQUFLRixLQUFMLENBQVdHLEtBQS9DLEVBQXNETyxJQUF0RCxDQUF2QjtBQUNBSyxJQUFBQSxLQUFLLENBQUNDLElBQU4sQ0FBVyxXQUFYLEVBQXdCUixnQkFBeEIsRUFDQ1MsSUFERCxDQUNNLEtBQUtSLFFBQUwsQ0FBY0UsUUFBZCxDQUROLEVBRUNPLEtBRkQsQ0FFUUMsR0FBRyxJQUFJO0FBQ2JDLE1BQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZRixHQUFaO0FBQ0QsS0FKRDtBQUtEOztBQUVERyxFQUFBQSxNQUFNLEdBQUk7QUFDUixRQUFJckIsSUFBSjs7QUFDQSxRQUFJLEtBQUtELEtBQUwsQ0FBV0MsSUFBWCxLQUFvQixDQUF4QixFQUEyQjtBQUN6QkEsTUFBQUEsSUFBSSxnQkFBSSw4Q0FDQSw0Q0FEQSxlQUVBO0FBQVEsUUFBQSxPQUFPLEVBQUUsS0FBS0k7QUFBdEIsMkJBRkEsQ0FBUjtBQUlELEtBTEQsTUFLTyxJQUFJLEtBQUtMLEtBQUwsQ0FBV0MsSUFBWCxLQUFvQixDQUF4QixFQUEyQjtBQUNoQ0EsTUFBQUEsSUFBSSxnQkFBRyxvQkFBQyxLQUFEO0FBQU8sUUFBQSxVQUFVLEVBQUUsS0FBS007QUFBeEIsUUFBUDtBQUNELEtBRk0sTUFFQSxJQUFJLEtBQUtQLEtBQUwsQ0FBV0MsSUFBWCxLQUFvQixDQUF4QixFQUEyQjtBQUNoQ0EsTUFBQUEsSUFBSSxnQkFBRyxvQkFBQyxLQUFEO0FBQU8sUUFBQSxVQUFVLEVBQUUsS0FBS007QUFBeEIsUUFBUDtBQUNELEtBRk0sTUFFQSxJQUFJLEtBQUtQLEtBQUwsQ0FBV0MsSUFBWCxLQUFvQixDQUF4QixFQUEyQjtBQUNoQ0EsTUFBQUEsSUFBSSxnQkFBRyxvQkFBQyxLQUFEO0FBQU8sUUFBQSxnQkFBZ0IsRUFBRSxLQUFLTztBQUE5QixRQUFQO0FBQ0Q7O0FBQ0Qsd0JBQVEsaUNBQ0NQLElBREQsQ0FBUjtBQUdEOztBQXhEK0I7O0FBNERsQ3NCLFFBQVEsQ0FBQ0QsTUFBVCxlQUFnQixvQkFBQyxHQUFELE9BQWhCLEVBQXdCRSxRQUFRLENBQUNDLGNBQVQsQ0FBd0IsS0FBeEIsQ0FBeEIiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBpbXBvcnQgUmVhY3QgZnJvbSAnLi9yZWFjdC5kZXZlbG9wbWVudC5qcyc7XG4vLyBpbXBvcnQgUmVhY3RET00gZnJvbSAnLi9yZWFjdC1kb20uZGV2ZWxvcG1lbnQuanMnO1xuaW1wb3J0IEZvcm0xIGZyb20gJy4vZm9ybTEuanMnXG5pbXBvcnQgRm9ybTIgZnJvbSAnLi9mb3JtMi5qcydcbmltcG9ydCBGb3JtMyBmcm9tICcuL2Zvcm0zLmpzJ1xuLy8gaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJ1xuXG5jbGFzcyBBcHAgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgIHN1cGVyKHByb3BzKTtcbiAgICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICAgIHBhZ2U6IDAsXG4gICAgICAgIGZvcm0xOiB7fSxcbiAgICAgICAgZm9ybTI6IHt9LFxuICAgICAgICBmb3JtMzoge31cbiAgICAgIH1cbiAgICAgIHRoaXMuY3JlYXRlQ2xpY2sgPSB0aGlzLmNyZWF0ZUNsaWNrLmJpbmQodGhpcyk7XG4gICAgICB0aGlzLmhhbmRsZU5leHQgPSB0aGlzLmhhbmRsZU5leHQuYmluZCh0aGlzKTtcbiAgICAgIHRoaXMuY29tcGxldGVQdXJjaGFzZSA9IHRoaXMuY29tcGxldGVQdXJjaGFzZS5iaW5kKHRoaXMpO1xuICB9XG5cbiAgY3JlYXRlQ2xpY2sgKCkge1xuICAgIHRoaXMuc2V0U3RhdGUoKHN0YXRlKSA9PiAoe1xuICAgICAgcGFnZTogMVxuICAgIH0pKTtcbiAgfVxuXG4gIGhhbmRsZU5leHQgKGZvcm0pIHtcbiAgICBsZXQgbmV3U3RhdGUgPSBPYmplY3QuYXNzaWduKHt9LCB0aGlzLnN0YXRlKTtcbiAgICBuZXdTdGF0ZVtmb3JtLmZvcm1OdW1dID0gZm9ybTtcbiAgICBuZXdTdGF0ZS5wYWdlKys7XG4gICAgdGhpcy5zZXRTdGF0ZShuZXdTdGF0ZSk7XG4gIH1cblxuICBjb21wbGV0ZVB1cmNoYXNlIChmb3JtKSB7XG4gICAgbGV0IG5ld1N0YXRlID0gT2JqZWN0LmFzc2lnbih7fSwgdGhpcy5zdGF0ZSk7XG4gICAgbmV3U3RhdGVbZm9ybS5mb3JtTnVtXSA9IGZvcm07XG4gICAgbmV3U3RhdGUucGFnZSA9IDA7XG4gICAgbGV0IGNvbXBsZXRlUHVyY2hhc2UgPSBPYmplY3QuYXNzaWduKHt9LCB0aGlzLnN0YXRlLmZvcm0xLCB0aGlzLnN0YXRlLmZvcm0yLCBmb3JtKTtcbiAgICBheGlvcy5wb3N0KCcvcHVyY2hhc2UnLCBjb21wbGV0ZVB1cmNoYXNlKVxuICAgIC50aGVuKHRoaXMuc2V0U3RhdGUobmV3U3RhdGUpKVxuICAgIC5jYXRjaCggZXJyID0+IHtcbiAgICAgIGNvbnNvbGUubG9nKGVycilcbiAgICB9KTtcbiAgfVxuXG4gIHJlbmRlciAoKSB7XG4gICAgbGV0IHBhZ2U7XG4gICAgaWYgKHRoaXMuc3RhdGUucGFnZSA9PT0gMCkge1xuICAgICAgcGFnZSA9ICg8ZGl2PlxuICAgICAgICAgICAgICA8aDE+SG9tZSBQYWdlPC9oMT5cbiAgICAgICAgICAgICAgPGJ1dHRvbiBvbkNsaWNrPXt0aGlzLmNyZWF0ZUNsaWNrfT5DcmVhdGUgQ2hlY2tvdXQ8L2J1dHRvbj5cbiAgICAgICAgICAgICAgPC9kaXY+KVxuICAgIH0gZWxzZSBpZiAodGhpcy5zdGF0ZS5wYWdlID09PSAxKSB7XG4gICAgICBwYWdlID0gPEZvcm0xIGhhbmRsZU5leHQ9e3RoaXMuaGFuZGxlTmV4dH0vPlxuICAgIH0gZWxzZSBpZiAodGhpcy5zdGF0ZS5wYWdlID09PSAyKSB7XG4gICAgICBwYWdlID0gPEZvcm0yIGhhbmRsZU5leHQ9e3RoaXMuaGFuZGxlTmV4dH0vPlxuICAgIH0gZWxzZSBpZiAodGhpcy5zdGF0ZS5wYWdlID09PSAzKSB7XG4gICAgICBwYWdlID0gPEZvcm0zIGNvbXBsZXRlUHVyY2hhc2U9e3RoaXMuY29tcGxldGVQdXJjaGFzZX0vPlxuICAgIH1cbiAgICByZXR1cm4gKDxkaXY+XG4gICAgICAgICAgICB7cGFnZX1cbiAgICAgICAgICA8L2Rpdj4pXG4gIH1cbn1cblxuXG5SZWFjdERPTS5yZW5kZXIoPEFwcC8+LCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYXBwJykpOyJdfQ==