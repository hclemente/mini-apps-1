// import React from './react.development.js';
// import ReactDOM from './react-dom.development.js';
import Form1 from './form1.js';
import Form2 from './form2.js';
import Form3 from './form3.js';

class App extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      page: 0,
      form1: {},
      form2: {},
      form3: {}
    };
    this.createClick = this.createClick.bind(this);
    this.handleNext = this.handleNext.bind(this);
    this.completePurchase = this.completePurchase.bind(this);
  }

  createClick() {
    this.setState(state => ({
      page: 1
    }));
  }

  handleNext(form) {
    let newState = Object.assign({}, this.state);
    newState[form.formNum] = form;
    newState.page++;
    console.log(newState);
    this.setState(newState);
  }

  completePurchase(form) {
    let newState = Object.assign({}, this.state);
    newState[form.formNum] = form;
    newState.page = 0;
    console.log(newState);
    this.setState(newState);
  }

  render() {
    let page;

    if (this.state.page === 0) {
      page = /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement("h1", null, "Home Page"), /*#__PURE__*/React.createElement("button", {
        onClick: this.createClick
      }, "Create Checkout"));
    } else if (this.state.page === 1) {
      page = /*#__PURE__*/React.createElement(Form1, {
        handleNext: this.handleNext
      });
    } else if (this.state.page === 2) {
      page = /*#__PURE__*/React.createElement(Form2, {
        handleNext: this.handleNext
      });
    } else if (this.state.page === 3) {
      page = /*#__PURE__*/React.createElement(Form3, {
        completePurchase: this.completePurchase
      });
    }

    return /*#__PURE__*/React.createElement("div", null, page);
  }

}

ReactDOM.render( /*#__PURE__*/React.createElement(App, null), document.getElementById('app'));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL2NsaWVudC9hcHAuanN4Il0sIm5hbWVzIjpbIkZvcm0xIiwiRm9ybTIiLCJGb3JtMyIsIkFwcCIsIlJlYWN0IiwiQ29tcG9uZW50IiwiY29uc3RydWN0b3IiLCJwcm9wcyIsInN0YXRlIiwicGFnZSIsImZvcm0xIiwiZm9ybTIiLCJmb3JtMyIsImNyZWF0ZUNsaWNrIiwiYmluZCIsImhhbmRsZU5leHQiLCJjb21wbGV0ZVB1cmNoYXNlIiwic2V0U3RhdGUiLCJmb3JtIiwibmV3U3RhdGUiLCJPYmplY3QiLCJhc3NpZ24iLCJmb3JtTnVtIiwiY29uc29sZSIsImxvZyIsInJlbmRlciIsIlJlYWN0RE9NIiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBLE9BQU9BLEtBQVAsTUFBa0IsWUFBbEI7QUFDQSxPQUFPQyxLQUFQLE1BQWtCLFlBQWxCO0FBQ0EsT0FBT0MsS0FBUCxNQUFrQixZQUFsQjs7QUFFQSxNQUFNQyxHQUFOLFNBQWtCQyxLQUFLLENBQUNDLFNBQXhCLENBQWtDO0FBQ2hDQyxFQUFBQSxXQUFXLENBQUNDLEtBQUQsRUFBUTtBQUNqQixVQUFNQSxLQUFOO0FBQ0UsU0FBS0MsS0FBTCxHQUFhO0FBQ1hDLE1BQUFBLElBQUksRUFBRSxDQURLO0FBRVhDLE1BQUFBLEtBQUssRUFBRSxFQUZJO0FBR1hDLE1BQUFBLEtBQUssRUFBRSxFQUhJO0FBSVhDLE1BQUFBLEtBQUssRUFBRTtBQUpJLEtBQWI7QUFNQSxTQUFLQyxXQUFMLEdBQW1CLEtBQUtBLFdBQUwsQ0FBaUJDLElBQWpCLENBQXNCLElBQXRCLENBQW5CO0FBQ0EsU0FBS0MsVUFBTCxHQUFrQixLQUFLQSxVQUFMLENBQWdCRCxJQUFoQixDQUFxQixJQUFyQixDQUFsQjtBQUNBLFNBQUtFLGdCQUFMLEdBQXdCLEtBQUtBLGdCQUFMLENBQXNCRixJQUF0QixDQUEyQixJQUEzQixDQUF4QjtBQUNIOztBQUVERCxFQUFBQSxXQUFXLEdBQUk7QUFDYixTQUFLSSxRQUFMLENBQWVULEtBQUQsS0FBWTtBQUN4QkMsTUFBQUEsSUFBSSxFQUFFO0FBRGtCLEtBQVosQ0FBZDtBQUdEOztBQUVETSxFQUFBQSxVQUFVLENBQUVHLElBQUYsRUFBUTtBQUNoQixRQUFJQyxRQUFRLEdBQUdDLE1BQU0sQ0FBQ0MsTUFBUCxDQUFjLEVBQWQsRUFBa0IsS0FBS2IsS0FBdkIsQ0FBZjtBQUNBVyxJQUFBQSxRQUFRLENBQUNELElBQUksQ0FBQ0ksT0FBTixDQUFSLEdBQXlCSixJQUF6QjtBQUNBQyxJQUFBQSxRQUFRLENBQUNWLElBQVQ7QUFDQWMsSUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlMLFFBQVo7QUFDQSxTQUFLRixRQUFMLENBQWNFLFFBQWQ7QUFDRDs7QUFFREgsRUFBQUEsZ0JBQWdCLENBQUVFLElBQUYsRUFBUTtBQUN0QixRQUFJQyxRQUFRLEdBQUdDLE1BQU0sQ0FBQ0MsTUFBUCxDQUFjLEVBQWQsRUFBa0IsS0FBS2IsS0FBdkIsQ0FBZjtBQUNBVyxJQUFBQSxRQUFRLENBQUNELElBQUksQ0FBQ0ksT0FBTixDQUFSLEdBQXlCSixJQUF6QjtBQUNBQyxJQUFBQSxRQUFRLENBQUNWLElBQVQsR0FBZ0IsQ0FBaEI7QUFDQWMsSUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlMLFFBQVo7QUFDQSxTQUFLRixRQUFMLENBQWNFLFFBQWQ7QUFDRDs7QUFFRE0sRUFBQUEsTUFBTSxHQUFJO0FBQ1IsUUFBSWhCLElBQUo7O0FBQ0EsUUFBSSxLQUFLRCxLQUFMLENBQVdDLElBQVgsS0FBb0IsQ0FBeEIsRUFBMkI7QUFDekJBLE1BQUFBLElBQUksZ0JBQUksOENBQ0EsNENBREEsZUFFQTtBQUFRLFFBQUEsT0FBTyxFQUFFLEtBQUtJO0FBQXRCLDJCQUZBLENBQVI7QUFJRCxLQUxELE1BS08sSUFBSSxLQUFLTCxLQUFMLENBQVdDLElBQVgsS0FBb0IsQ0FBeEIsRUFBMkI7QUFDaENBLE1BQUFBLElBQUksZ0JBQUcsb0JBQUMsS0FBRDtBQUFPLFFBQUEsVUFBVSxFQUFFLEtBQUtNO0FBQXhCLFFBQVA7QUFDRCxLQUZNLE1BRUEsSUFBSSxLQUFLUCxLQUFMLENBQVdDLElBQVgsS0FBb0IsQ0FBeEIsRUFBMkI7QUFDaENBLE1BQUFBLElBQUksZ0JBQUcsb0JBQUMsS0FBRDtBQUFPLFFBQUEsVUFBVSxFQUFFLEtBQUtNO0FBQXhCLFFBQVA7QUFDRCxLQUZNLE1BRUEsSUFBSSxLQUFLUCxLQUFMLENBQVdDLElBQVgsS0FBb0IsQ0FBeEIsRUFBMkI7QUFDaENBLE1BQUFBLElBQUksZ0JBQUcsb0JBQUMsS0FBRDtBQUFPLFFBQUEsZ0JBQWdCLEVBQUUsS0FBS087QUFBOUIsUUFBUDtBQUNEOztBQUNELHdCQUFRLGlDQUNDUCxJQURELENBQVI7QUFHRDs7QUFyRCtCOztBQXlEbENpQixRQUFRLENBQUNELE1BQVQsZUFBZ0Isb0JBQUMsR0FBRCxPQUFoQixFQUF3QkUsUUFBUSxDQUFDQyxjQUFULENBQXdCLEtBQXhCLENBQXhCIiwic291cmNlc0NvbnRlbnQiOlsiLy8gaW1wb3J0IFJlYWN0IGZyb20gJy4vcmVhY3QuZGV2ZWxvcG1lbnQuanMnO1xuLy8gaW1wb3J0IFJlYWN0RE9NIGZyb20gJy4vcmVhY3QtZG9tLmRldmVsb3BtZW50LmpzJztcbmltcG9ydCBGb3JtMSBmcm9tICcuL2Zvcm0xLmpzJ1xuaW1wb3J0IEZvcm0yIGZyb20gJy4vZm9ybTIuanMnXG5pbXBvcnQgRm9ybTMgZnJvbSAnLi9mb3JtMy5qcydcblxuY2xhc3MgQXBwIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICBzdXBlcihwcm9wcyk7XG4gICAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgICBwYWdlOiAwLFxuICAgICAgICBmb3JtMToge30sXG4gICAgICAgIGZvcm0yOiB7fSxcbiAgICAgICAgZm9ybTM6IHt9XG4gICAgICB9XG4gICAgICB0aGlzLmNyZWF0ZUNsaWNrID0gdGhpcy5jcmVhdGVDbGljay5iaW5kKHRoaXMpO1xuICAgICAgdGhpcy5oYW5kbGVOZXh0ID0gdGhpcy5oYW5kbGVOZXh0LmJpbmQodGhpcyk7XG4gICAgICB0aGlzLmNvbXBsZXRlUHVyY2hhc2UgPSB0aGlzLmNvbXBsZXRlUHVyY2hhc2UuYmluZCh0aGlzKTtcbiAgfVxuXG4gIGNyZWF0ZUNsaWNrICgpIHtcbiAgICB0aGlzLnNldFN0YXRlKChzdGF0ZSkgPT4gKHtcbiAgICAgIHBhZ2U6IDFcbiAgICB9KSk7XG4gIH1cblxuICBoYW5kbGVOZXh0IChmb3JtKSB7XG4gICAgbGV0IG5ld1N0YXRlID0gT2JqZWN0LmFzc2lnbih7fSwgdGhpcy5zdGF0ZSk7XG4gICAgbmV3U3RhdGVbZm9ybS5mb3JtTnVtXSA9IGZvcm07XG4gICAgbmV3U3RhdGUucGFnZSsrO1xuICAgIGNvbnNvbGUubG9nKG5ld1N0YXRlKTtcbiAgICB0aGlzLnNldFN0YXRlKG5ld1N0YXRlKTtcbiAgfVxuXG4gIGNvbXBsZXRlUHVyY2hhc2UgKGZvcm0pIHtcbiAgICBsZXQgbmV3U3RhdGUgPSBPYmplY3QuYXNzaWduKHt9LCB0aGlzLnN0YXRlKTtcbiAgICBuZXdTdGF0ZVtmb3JtLmZvcm1OdW1dID0gZm9ybTtcbiAgICBuZXdTdGF0ZS5wYWdlID0gMDtcbiAgICBjb25zb2xlLmxvZyhuZXdTdGF0ZSk7XG4gICAgdGhpcy5zZXRTdGF0ZShuZXdTdGF0ZSk7XG4gIH1cblxuICByZW5kZXIgKCkge1xuICAgIGxldCBwYWdlO1xuICAgIGlmICh0aGlzLnN0YXRlLnBhZ2UgPT09IDApIHtcbiAgICAgIHBhZ2UgPSAoPGRpdj5cbiAgICAgICAgICAgICAgPGgxPkhvbWUgUGFnZTwvaDE+XG4gICAgICAgICAgICAgIDxidXR0b24gb25DbGljaz17dGhpcy5jcmVhdGVDbGlja30+Q3JlYXRlIENoZWNrb3V0PC9idXR0b24+XG4gICAgICAgICAgICAgIDwvZGl2PilcbiAgICB9IGVsc2UgaWYgKHRoaXMuc3RhdGUucGFnZSA9PT0gMSkge1xuICAgICAgcGFnZSA9IDxGb3JtMSBoYW5kbGVOZXh0PXt0aGlzLmhhbmRsZU5leHR9Lz5cbiAgICB9IGVsc2UgaWYgKHRoaXMuc3RhdGUucGFnZSA9PT0gMikge1xuICAgICAgcGFnZSA9IDxGb3JtMiBoYW5kbGVOZXh0PXt0aGlzLmhhbmRsZU5leHR9Lz5cbiAgICB9IGVsc2UgaWYgKHRoaXMuc3RhdGUucGFnZSA9PT0gMykge1xuICAgICAgcGFnZSA9IDxGb3JtMyBjb21wbGV0ZVB1cmNoYXNlPXt0aGlzLmNvbXBsZXRlUHVyY2hhc2V9Lz5cbiAgICB9XG4gICAgcmV0dXJuICg8ZGl2PlxuICAgICAgICAgICAge3BhZ2V9XG4gICAgICAgICAgPC9kaXY+KVxuICB9XG59XG5cblxuUmVhY3RET00ucmVuZGVyKDxBcHAvPiwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2FwcCcpKTsiXX0=