class Form2 extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      addressline1: '',
      addressline2: '',
      city: '',
      state: '',
      zip: '',
      phone: ''
    };
    this.handleInput = this.handleInput.bind(this);
  }

  handleInput(event) {
    const target = event.target;
    const value = target.value;
    const property = target.name;
    let newState = Object.assign({}, this.state);
    newState[property] = value;
    console.log(newState);
    this.setState(newState);
  }

  render() {
    return /*#__PURE__*/React.createElement("form", null, /*#__PURE__*/React.createElement("h1", null, "Form 2"), /*#__PURE__*/React.createElement("label", null, "Address Line 1:", /*#__PURE__*/React.createElement("input", {
      type: "text",
      name: "addressline1",
      value: this.state.addressline1,
      onChange: this.handleInput
    })), /*#__PURE__*/React.createElement("br", null), /*#__PURE__*/React.createElement("label", null, "Address Line 2:", /*#__PURE__*/React.createElement("input", {
      type: "text",
      name: "addressline2",
      value: this.state.addressline2,
      onChange: this.handleInput
    })), /*#__PURE__*/React.createElement("br", null), /*#__PURE__*/React.createElement("button", {
      onClick: this.props.secondNext
    }, "Next"));
  }

}

export default Form2;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL2NsaWVudC9mb3JtMi5qc3giXSwibmFtZXMiOlsiRm9ybTIiLCJSZWFjdCIsIkNvbXBvbmVudCIsImNvbnN0cnVjdG9yIiwicHJvcHMiLCJzdGF0ZSIsImFkZHJlc3NsaW5lMSIsImFkZHJlc3NsaW5lMiIsImNpdHkiLCJ6aXAiLCJwaG9uZSIsImhhbmRsZUlucHV0IiwiYmluZCIsImV2ZW50IiwidGFyZ2V0IiwidmFsdWUiLCJwcm9wZXJ0eSIsIm5hbWUiLCJuZXdTdGF0ZSIsIk9iamVjdCIsImFzc2lnbiIsImNvbnNvbGUiLCJsb2ciLCJzZXRTdGF0ZSIsInJlbmRlciIsInNlY29uZE5leHQiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLEtBQU4sU0FBb0JDLEtBQUssQ0FBQ0MsU0FBMUIsQ0FBb0M7QUFDbENDLEVBQUFBLFdBQVcsQ0FBRUMsS0FBRixFQUFTO0FBQ2xCLFVBQU9BLEtBQVA7QUFDQSxTQUFLQyxLQUFMLEdBQWE7QUFDWEMsTUFBQUEsWUFBWSxFQUFFLEVBREg7QUFFWEMsTUFBQUEsWUFBWSxFQUFFLEVBRkg7QUFHWEMsTUFBQUEsSUFBSSxFQUFFLEVBSEs7QUFJWEgsTUFBQUEsS0FBSyxFQUFFLEVBSkk7QUFLWEksTUFBQUEsR0FBRyxFQUFFLEVBTE07QUFNWEMsTUFBQUEsS0FBSyxFQUFFO0FBTkksS0FBYjtBQVFBLFNBQUtDLFdBQUwsR0FBbUIsS0FBS0EsV0FBTCxDQUFpQkMsSUFBakIsQ0FBc0IsSUFBdEIsQ0FBbkI7QUFDRDs7QUFFREQsRUFBQUEsV0FBVyxDQUFFRSxLQUFGLEVBQVM7QUFDbEIsVUFBTUMsTUFBTSxHQUFHRCxLQUFLLENBQUNDLE1BQXJCO0FBQ0EsVUFBTUMsS0FBSyxHQUFHRCxNQUFNLENBQUNDLEtBQXJCO0FBQ0EsVUFBTUMsUUFBUSxHQUFHRixNQUFNLENBQUNHLElBQXhCO0FBQ0EsUUFBSUMsUUFBUSxHQUFHQyxNQUFNLENBQUNDLE1BQVAsQ0FBYyxFQUFkLEVBQWtCLEtBQUtmLEtBQXZCLENBQWY7QUFDQWEsSUFBQUEsUUFBUSxDQUFDRixRQUFELENBQVIsR0FBcUJELEtBQXJCO0FBQ0FNLElBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZSixRQUFaO0FBQ0EsU0FBS0ssUUFBTCxDQUFjTCxRQUFkO0FBQ0Q7O0FBRURNLEVBQUFBLE1BQU0sR0FBSTtBQUNSLHdCQUVRLCtDQUNBLHlDQURBLGVBRUUsbUVBRUE7QUFDRSxNQUFBLElBQUksRUFBQyxNQURQO0FBRUUsTUFBQSxJQUFJLEVBQUMsY0FGUDtBQUdFLE1BQUEsS0FBSyxFQUFFLEtBQUtuQixLQUFMLENBQVdDLFlBSHBCO0FBSUUsTUFBQSxRQUFRLEVBQUUsS0FBS0s7QUFKakIsTUFGQSxDQUZGLGVBVUUsK0JBVkYsZUFXRSxtRUFFQTtBQUNFLE1BQUEsSUFBSSxFQUFDLE1BRFA7QUFFRSxNQUFBLElBQUksRUFBQyxjQUZQO0FBR0UsTUFBQSxLQUFLLEVBQUUsS0FBS04sS0FBTCxDQUFXRSxZQUhwQjtBQUlFLE1BQUEsUUFBUSxFQUFFLEtBQUtJO0FBSmpCLE1BRkEsQ0FYRixlQW9CRSwrQkFwQkYsZUFxQkU7QUFBUSxNQUFBLE9BQU8sRUFBRSxLQUFLUCxLQUFMLENBQVdxQjtBQUE1QixjQXJCRixDQUZSO0FBMEJEOztBQW5EaUM7O0FBc0RwQyxlQUFlekIsS0FBZiIsInNvdXJjZXNDb250ZW50IjpbImNsYXNzIEZvcm0yIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgY29uc3RydWN0b3IgKHByb3BzKSB7XG4gICAgc3VwZXIgKHByb3BzKTtcbiAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgYWRkcmVzc2xpbmUxOiAnJyxcbiAgICAgIGFkZHJlc3NsaW5lMjogJycsXG4gICAgICBjaXR5OiAnJyxcbiAgICAgIHN0YXRlOiAnJyxcbiAgICAgIHppcDogJycsXG4gICAgICBwaG9uZTogJydcbiAgICB9XG4gICAgdGhpcy5oYW5kbGVJbnB1dCA9IHRoaXMuaGFuZGxlSW5wdXQuYmluZCh0aGlzKTtcbiAgfVxuXG4gIGhhbmRsZUlucHV0IChldmVudCkge1xuICAgIGNvbnN0IHRhcmdldCA9IGV2ZW50LnRhcmdldDtcbiAgICBjb25zdCB2YWx1ZSA9IHRhcmdldC52YWx1ZTtcbiAgICBjb25zdCBwcm9wZXJ0eSA9IHRhcmdldC5uYW1lO1xuICAgIGxldCBuZXdTdGF0ZSA9IE9iamVjdC5hc3NpZ24oe30sIHRoaXMuc3RhdGUpO1xuICAgIG5ld1N0YXRlW3Byb3BlcnR5XSA9IHZhbHVlO1xuICAgIGNvbnNvbGUubG9nKG5ld1N0YXRlKTtcbiAgICB0aGlzLnNldFN0YXRlKG5ld1N0YXRlKTtcbiAgfVxuXG4gIHJlbmRlciAoKSB7XG4gICAgcmV0dXJuIChcblxuICAgICAgICAgICAgPGZvcm0+XG4gICAgICAgICAgICA8aDE+Rm9ybSAyPC9oMT5cbiAgICAgICAgICAgICAgPGxhYmVsPlxuICAgICAgICAgICAgICBBZGRyZXNzIExpbmUgMTpcbiAgICAgICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICAgICAgdHlwZT0ndGV4dCdcbiAgICAgICAgICAgICAgICBuYW1lPSdhZGRyZXNzbGluZTEnXG4gICAgICAgICAgICAgICAgdmFsdWU9e3RoaXMuc3RhdGUuYWRkcmVzc2xpbmUxfVxuICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXt0aGlzLmhhbmRsZUlucHV0fSAvPlxuICAgICAgICAgICAgICA8L2xhYmVsPlxuICAgICAgICAgICAgICA8YnIvPlxuICAgICAgICAgICAgICA8bGFiZWw+XG4gICAgICAgICAgICAgIEFkZHJlc3MgTGluZSAyOlxuICAgICAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgICAgICB0eXBlPSd0ZXh0J1xuICAgICAgICAgICAgICAgIG5hbWU9J2FkZHJlc3NsaW5lMidcbiAgICAgICAgICAgICAgICB2YWx1ZT17dGhpcy5zdGF0ZS5hZGRyZXNzbGluZTJ9XG4gICAgICAgICAgICAgICAgb25DaGFuZ2U9e3RoaXMuaGFuZGxlSW5wdXR9IC8+XG4gICAgICAgICAgICAgIDwvbGFiZWw+XG5cbiAgICAgICAgICAgICAgPGJyLz5cbiAgICAgICAgICAgICAgPGJ1dHRvbiBvbkNsaWNrPXt0aGlzLnByb3BzLnNlY29uZE5leHR9Pk5leHQ8L2J1dHRvbj5cbiAgICAgICAgICAgIDwvZm9ybT5cbiAgICApXG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgRm9ybTI7Il19