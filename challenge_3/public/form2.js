import TextInput from './textinput.js';

class Form2 extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      addressline1: '',
      addressline2: '',
      city: '',
      state: '',
      zip: '',
      phone: '',
      formNum: 'form2'
    };
    this.handleInput = this.handleInput.bind(this);
    this.handleSubmit = this.handleSubmit.bind(this);
  }

  handleInput(event) {
    const target = event.target;
    const value = target.value;
    const property = target.name;
    let newState = Object.assign({}, this.state);
    newState[property] = value;
    this.setState(newState);
  }

  handleSubmit(event) {
    event.preventDefault();
    this.props.handleNext(this.state);
  }

  render() {
    let label = ['Address Line 1: ', 'Address Line 2: ', 'City: ', 'State: ', 'Zip: ', 'Phone: '];
    let properties = ['addressline1', 'addressline2', 'city', 'state', 'zip', 'phone'];
    let types = ['text', 'text', 'text', 'text', 'text', 'text'];
    return /*#__PURE__*/React.createElement("form", {
      onSubmit: this.handleSubmit
    }, /*#__PURE__*/React.createElement("h1", null, "Form 2"), label.map((input, index) => /*#__PURE__*/React.createElement(TextInput, {
      name: properties[index],
      value: this.state[properties[index]],
      inputType: types[index],
      label: label[index],
      change: this.handleInput,
      key: index
    })), /*#__PURE__*/React.createElement("button", null, "Next"));
  }

}

export default Form2;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL2NsaWVudC9mb3JtMi5qc3giXSwibmFtZXMiOlsiVGV4dElucHV0IiwiRm9ybTIiLCJSZWFjdCIsIkNvbXBvbmVudCIsImNvbnN0cnVjdG9yIiwicHJvcHMiLCJzdGF0ZSIsImFkZHJlc3NsaW5lMSIsImFkZHJlc3NsaW5lMiIsImNpdHkiLCJ6aXAiLCJwaG9uZSIsImZvcm1OdW0iLCJoYW5kbGVJbnB1dCIsImJpbmQiLCJoYW5kbGVTdWJtaXQiLCJldmVudCIsInRhcmdldCIsInZhbHVlIiwicHJvcGVydHkiLCJuYW1lIiwibmV3U3RhdGUiLCJPYmplY3QiLCJhc3NpZ24iLCJzZXRTdGF0ZSIsInByZXZlbnREZWZhdWx0IiwiaGFuZGxlTmV4dCIsInJlbmRlciIsImxhYmVsIiwicHJvcGVydGllcyIsInR5cGVzIiwibWFwIiwiaW5wdXQiLCJpbmRleCJdLCJtYXBwaW5ncyI6IkFBQUEsT0FBT0EsU0FBUCxNQUFzQixnQkFBdEI7O0FBRUEsTUFBTUMsS0FBTixTQUFvQkMsS0FBSyxDQUFDQyxTQUExQixDQUFvQztBQUNsQ0MsRUFBQUEsV0FBVyxDQUFFQyxLQUFGLEVBQVM7QUFDbEIsVUFBT0EsS0FBUDtBQUNBLFNBQUtDLEtBQUwsR0FBYTtBQUNYQyxNQUFBQSxZQUFZLEVBQUUsRUFESDtBQUVYQyxNQUFBQSxZQUFZLEVBQUUsRUFGSDtBQUdYQyxNQUFBQSxJQUFJLEVBQUUsRUFISztBQUlYSCxNQUFBQSxLQUFLLEVBQUUsRUFKSTtBQUtYSSxNQUFBQSxHQUFHLEVBQUUsRUFMTTtBQU1YQyxNQUFBQSxLQUFLLEVBQUUsRUFOSTtBQU9YQyxNQUFBQSxPQUFPLEVBQUU7QUFQRSxLQUFiO0FBU0EsU0FBS0MsV0FBTCxHQUFtQixLQUFLQSxXQUFMLENBQWlCQyxJQUFqQixDQUFzQixJQUF0QixDQUFuQjtBQUNBLFNBQUtDLFlBQUwsR0FBb0IsS0FBS0EsWUFBTCxDQUFrQkQsSUFBbEIsQ0FBdUIsSUFBdkIsQ0FBcEI7QUFDRDs7QUFFREQsRUFBQUEsV0FBVyxDQUFFRyxLQUFGLEVBQVM7QUFDbEIsVUFBTUMsTUFBTSxHQUFHRCxLQUFLLENBQUNDLE1BQXJCO0FBQ0EsVUFBTUMsS0FBSyxHQUFHRCxNQUFNLENBQUNDLEtBQXJCO0FBQ0EsVUFBTUMsUUFBUSxHQUFHRixNQUFNLENBQUNHLElBQXhCO0FBQ0EsUUFBSUMsUUFBUSxHQUFHQyxNQUFNLENBQUNDLE1BQVAsQ0FBYyxFQUFkLEVBQWtCLEtBQUtqQixLQUF2QixDQUFmO0FBQ0FlLElBQUFBLFFBQVEsQ0FBQ0YsUUFBRCxDQUFSLEdBQXFCRCxLQUFyQjtBQUNBLFNBQUtNLFFBQUwsQ0FBY0gsUUFBZDtBQUNEOztBQUVETixFQUFBQSxZQUFZLENBQUVDLEtBQUYsRUFBUztBQUNuQkEsSUFBQUEsS0FBSyxDQUFDUyxjQUFOO0FBQ0EsU0FBS3BCLEtBQUwsQ0FBV3FCLFVBQVgsQ0FBc0IsS0FBS3BCLEtBQTNCO0FBQ0Q7O0FBRURxQixFQUFBQSxNQUFNLEdBQUk7QUFDUixRQUFJQyxLQUFLLEdBQUcsQ0FBQyxrQkFBRCxFQUFxQixrQkFBckIsRUFBeUMsUUFBekMsRUFBbUQsU0FBbkQsRUFBOEQsT0FBOUQsRUFBdUUsU0FBdkUsQ0FBWjtBQUNBLFFBQUlDLFVBQVUsR0FBRyxDQUFDLGNBQUQsRUFBaUIsY0FBakIsRUFBaUMsTUFBakMsRUFBeUMsT0FBekMsRUFBa0QsS0FBbEQsRUFBeUQsT0FBekQsQ0FBakI7QUFDQSxRQUFJQyxLQUFLLEdBQUcsQ0FBQyxNQUFELEVBQVMsTUFBVCxFQUFpQixNQUFqQixFQUF5QixNQUF6QixFQUFpQyxNQUFqQyxFQUF5QyxNQUF6QyxDQUFaO0FBQ0Esd0JBRVE7QUFBTSxNQUFBLFFBQVEsRUFBRSxLQUFLZjtBQUFyQixvQkFDQSx5Q0FEQSxFQUVDYSxLQUFLLENBQUNHLEdBQU4sQ0FBVSxDQUFDQyxLQUFELEVBQVFDLEtBQVIsa0JBQ1Qsb0JBQUMsU0FBRDtBQUFXLE1BQUEsSUFBSSxFQUFFSixVQUFVLENBQUNJLEtBQUQsQ0FBM0I7QUFDQSxNQUFBLEtBQUssRUFBRSxLQUFLM0IsS0FBTCxDQUFXdUIsVUFBVSxDQUFDSSxLQUFELENBQXJCLENBRFA7QUFFQSxNQUFBLFNBQVMsRUFBRUgsS0FBSyxDQUFDRyxLQUFELENBRmhCO0FBR0EsTUFBQSxLQUFLLEVBQUVMLEtBQUssQ0FBQ0ssS0FBRCxDQUhaO0FBSUEsTUFBQSxNQUFNLEVBQUUsS0FBS3BCLFdBSmI7QUFLQSxNQUFBLEdBQUcsRUFBRW9CO0FBTEwsTUFERCxDQUZELGVBV0UsMkNBWEYsQ0FGUjtBQWdCRDs7QUFsRGlDOztBQXFEcEMsZUFBZWhDLEtBQWYiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgVGV4dElucHV0IGZyb20gJy4vdGV4dGlucHV0LmpzJztcblxuY2xhc3MgRm9ybTIgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICBjb25zdHJ1Y3RvciAocHJvcHMpIHtcbiAgICBzdXBlciAocHJvcHMpO1xuICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICBhZGRyZXNzbGluZTE6ICcnLFxuICAgICAgYWRkcmVzc2xpbmUyOiAnJyxcbiAgICAgIGNpdHk6ICcnLFxuICAgICAgc3RhdGU6ICcnLFxuICAgICAgemlwOiAnJyxcbiAgICAgIHBob25lOiAnJyxcbiAgICAgIGZvcm1OdW06ICdmb3JtMidcbiAgICB9XG4gICAgdGhpcy5oYW5kbGVJbnB1dCA9IHRoaXMuaGFuZGxlSW5wdXQuYmluZCh0aGlzKTtcbiAgICB0aGlzLmhhbmRsZVN1Ym1pdCA9IHRoaXMuaGFuZGxlU3VibWl0LmJpbmQodGhpcyk7XG4gIH1cblxuICBoYW5kbGVJbnB1dCAoZXZlbnQpIHtcbiAgICBjb25zdCB0YXJnZXQgPSBldmVudC50YXJnZXQ7XG4gICAgY29uc3QgdmFsdWUgPSB0YXJnZXQudmFsdWU7XG4gICAgY29uc3QgcHJvcGVydHkgPSB0YXJnZXQubmFtZTtcbiAgICBsZXQgbmV3U3RhdGUgPSBPYmplY3QuYXNzaWduKHt9LCB0aGlzLnN0YXRlKTtcbiAgICBuZXdTdGF0ZVtwcm9wZXJ0eV0gPSB2YWx1ZTtcbiAgICB0aGlzLnNldFN0YXRlKG5ld1N0YXRlKTtcbiAgfVxuXG4gIGhhbmRsZVN1Ym1pdCAoZXZlbnQpIHtcbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIHRoaXMucHJvcHMuaGFuZGxlTmV4dCh0aGlzLnN0YXRlKTtcbiAgfVxuXG4gIHJlbmRlciAoKSB7XG4gICAgbGV0IGxhYmVsID0gWydBZGRyZXNzIExpbmUgMTogJywgJ0FkZHJlc3MgTGluZSAyOiAnLCAnQ2l0eTogJywgJ1N0YXRlOiAnLCAnWmlwOiAnLCAnUGhvbmU6ICddO1xuICAgIGxldCBwcm9wZXJ0aWVzID0gWydhZGRyZXNzbGluZTEnLCAnYWRkcmVzc2xpbmUyJywgJ2NpdHknLCAnc3RhdGUnLCAnemlwJywgJ3Bob25lJ107XG4gICAgbGV0IHR5cGVzID0gWyd0ZXh0JywgJ3RleHQnLCAndGV4dCcsICd0ZXh0JywgJ3RleHQnLCAndGV4dCddO1xuICAgIHJldHVybiAoXG5cbiAgICAgICAgICAgIDxmb3JtIG9uU3VibWl0PXt0aGlzLmhhbmRsZVN1Ym1pdH0+XG4gICAgICAgICAgICA8aDE+Rm9ybSAyPC9oMT5cbiAgICAgICAgICAgIHtsYWJlbC5tYXAoKGlucHV0LCBpbmRleCkgPT5cbiAgICAgICAgICAgICAgPFRleHRJbnB1dCBuYW1lPXtwcm9wZXJ0aWVzW2luZGV4XX1cbiAgICAgICAgICAgICAgdmFsdWU9e3RoaXMuc3RhdGVbcHJvcGVydGllc1tpbmRleF1dfVxuICAgICAgICAgICAgICBpbnB1dFR5cGU9e3R5cGVzW2luZGV4XX1cbiAgICAgICAgICAgICAgbGFiZWw9e2xhYmVsW2luZGV4XX1cbiAgICAgICAgICAgICAgY2hhbmdlPXt0aGlzLmhhbmRsZUlucHV0fVxuICAgICAgICAgICAgICBrZXk9e2luZGV4fVxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgICA8YnV0dG9uPk5leHQ8L2J1dHRvbj5cbiAgICAgICAgICAgIDwvZm9ybT5cbiAgICApXG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgRm9ybTI7Il19