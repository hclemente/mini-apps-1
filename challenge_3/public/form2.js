import TextInput from './textinput.js';

class Form2 extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      addressline1: '',
      addressline2: '',
      city: '',
      state: '',
      zip: '',
      phone: '',
      formNum: 'form2'
    };
    this.handleInput = this.handleInput.bind(this);
    this.handleSubmit = this.handleSubmit.bind(this);
  }

  handleInput(event) {
    const target = event.target;
    const value = target.value;
    const property = target.name;
    let newState = Object.assign({}, this.state);
    newState[property] = value;
    console.log(newState);
    this.setState(newState);
  }

  handleSubmit(event) {
    event.preventDefault();
    this.props.handleNext(this.state);
  }

  render() {
    let label = ['Address Line 1: ', 'Address Line 2: ', 'City: ', 'State: ', 'Zip: ', 'Phone: '];
    let properties = ['addressline1', 'addressline2', 'city', 'state', 'zip', 'phone'];
    let types = ['text', 'text', 'text', 'text', 'text', 'text'];
    return /*#__PURE__*/React.createElement("form", {
      onSubmit: this.handleSubmit
    }, /*#__PURE__*/React.createElement("h1", null, "Form 2"), label.map((input, index) => /*#__PURE__*/React.createElement(TextInput, {
      name: properties[index],
      value: this.state[properties[index]],
      inputType: types[index],
      label: label[index],
      change: this.handleInput,
      key: index
    })), /*#__PURE__*/React.createElement("button", null, "Next"));
  }

}

export default Form2;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL2NsaWVudC9mb3JtMi5qc3giXSwibmFtZXMiOlsiVGV4dElucHV0IiwiRm9ybTIiLCJSZWFjdCIsIkNvbXBvbmVudCIsImNvbnN0cnVjdG9yIiwicHJvcHMiLCJzdGF0ZSIsImFkZHJlc3NsaW5lMSIsImFkZHJlc3NsaW5lMiIsImNpdHkiLCJ6aXAiLCJwaG9uZSIsImZvcm1OdW0iLCJoYW5kbGVJbnB1dCIsImJpbmQiLCJoYW5kbGVTdWJtaXQiLCJldmVudCIsInRhcmdldCIsInZhbHVlIiwicHJvcGVydHkiLCJuYW1lIiwibmV3U3RhdGUiLCJPYmplY3QiLCJhc3NpZ24iLCJjb25zb2xlIiwibG9nIiwic2V0U3RhdGUiLCJwcmV2ZW50RGVmYXVsdCIsImhhbmRsZU5leHQiLCJyZW5kZXIiLCJsYWJlbCIsInByb3BlcnRpZXMiLCJ0eXBlcyIsIm1hcCIsImlucHV0IiwiaW5kZXgiXSwibWFwcGluZ3MiOiJBQUFBLE9BQU9BLFNBQVAsTUFBc0IsZ0JBQXRCOztBQUVBLE1BQU1DLEtBQU4sU0FBb0JDLEtBQUssQ0FBQ0MsU0FBMUIsQ0FBb0M7QUFDbENDLEVBQUFBLFdBQVcsQ0FBRUMsS0FBRixFQUFTO0FBQ2xCLFVBQU9BLEtBQVA7QUFDQSxTQUFLQyxLQUFMLEdBQWE7QUFDWEMsTUFBQUEsWUFBWSxFQUFFLEVBREg7QUFFWEMsTUFBQUEsWUFBWSxFQUFFLEVBRkg7QUFHWEMsTUFBQUEsSUFBSSxFQUFFLEVBSEs7QUFJWEgsTUFBQUEsS0FBSyxFQUFFLEVBSkk7QUFLWEksTUFBQUEsR0FBRyxFQUFFLEVBTE07QUFNWEMsTUFBQUEsS0FBSyxFQUFFLEVBTkk7QUFPWEMsTUFBQUEsT0FBTyxFQUFFO0FBUEUsS0FBYjtBQVNBLFNBQUtDLFdBQUwsR0FBbUIsS0FBS0EsV0FBTCxDQUFpQkMsSUFBakIsQ0FBc0IsSUFBdEIsQ0FBbkI7QUFDQSxTQUFLQyxZQUFMLEdBQW9CLEtBQUtBLFlBQUwsQ0FBa0JELElBQWxCLENBQXVCLElBQXZCLENBQXBCO0FBQ0Q7O0FBRURELEVBQUFBLFdBQVcsQ0FBRUcsS0FBRixFQUFTO0FBQ2xCLFVBQU1DLE1BQU0sR0FBR0QsS0FBSyxDQUFDQyxNQUFyQjtBQUNBLFVBQU1DLEtBQUssR0FBR0QsTUFBTSxDQUFDQyxLQUFyQjtBQUNBLFVBQU1DLFFBQVEsR0FBR0YsTUFBTSxDQUFDRyxJQUF4QjtBQUNBLFFBQUlDLFFBQVEsR0FBR0MsTUFBTSxDQUFDQyxNQUFQLENBQWMsRUFBZCxFQUFrQixLQUFLakIsS0FBdkIsQ0FBZjtBQUNBZSxJQUFBQSxRQUFRLENBQUNGLFFBQUQsQ0FBUixHQUFxQkQsS0FBckI7QUFDQU0sSUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlKLFFBQVo7QUFDQSxTQUFLSyxRQUFMLENBQWNMLFFBQWQ7QUFDRDs7QUFFRE4sRUFBQUEsWUFBWSxDQUFFQyxLQUFGLEVBQVM7QUFDbkJBLElBQUFBLEtBQUssQ0FBQ1csY0FBTjtBQUNBLFNBQUt0QixLQUFMLENBQVd1QixVQUFYLENBQXNCLEtBQUt0QixLQUEzQjtBQUNEOztBQUVEdUIsRUFBQUEsTUFBTSxHQUFJO0FBQ1IsUUFBSUMsS0FBSyxHQUFHLENBQUMsa0JBQUQsRUFBcUIsa0JBQXJCLEVBQXlDLFFBQXpDLEVBQW1ELFNBQW5ELEVBQThELE9BQTlELEVBQXVFLFNBQXZFLENBQVo7QUFDQSxRQUFJQyxVQUFVLEdBQUcsQ0FBQyxjQUFELEVBQWlCLGNBQWpCLEVBQWlDLE1BQWpDLEVBQXlDLE9BQXpDLEVBQWtELEtBQWxELEVBQXlELE9BQXpELENBQWpCO0FBQ0EsUUFBSUMsS0FBSyxHQUFHLENBQUMsTUFBRCxFQUFTLE1BQVQsRUFBaUIsTUFBakIsRUFBeUIsTUFBekIsRUFBaUMsTUFBakMsRUFBeUMsTUFBekMsQ0FBWjtBQUNBLHdCQUVRO0FBQU0sTUFBQSxRQUFRLEVBQUUsS0FBS2pCO0FBQXJCLG9CQUNBLHlDQURBLEVBRUNlLEtBQUssQ0FBQ0csR0FBTixDQUFVLENBQUNDLEtBQUQsRUFBUUMsS0FBUixrQkFDVCxvQkFBQyxTQUFEO0FBQVcsTUFBQSxJQUFJLEVBQUVKLFVBQVUsQ0FBQ0ksS0FBRCxDQUEzQjtBQUNBLE1BQUEsS0FBSyxFQUFFLEtBQUs3QixLQUFMLENBQVd5QixVQUFVLENBQUNJLEtBQUQsQ0FBckIsQ0FEUDtBQUVBLE1BQUEsU0FBUyxFQUFFSCxLQUFLLENBQUNHLEtBQUQsQ0FGaEI7QUFHQSxNQUFBLEtBQUssRUFBRUwsS0FBSyxDQUFDSyxLQUFELENBSFo7QUFJQSxNQUFBLE1BQU0sRUFBRSxLQUFLdEIsV0FKYjtBQUtBLE1BQUEsR0FBRyxFQUFFc0I7QUFMTCxNQURELENBRkQsZUFXRSwyQ0FYRixDQUZSO0FBZ0JEOztBQW5EaUM7O0FBc0RwQyxlQUFlbEMsS0FBZiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBUZXh0SW5wdXQgZnJvbSAnLi90ZXh0aW5wdXQuanMnO1xuXG5jbGFzcyBGb3JtMiBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gIGNvbnN0cnVjdG9yIChwcm9wcykge1xuICAgIHN1cGVyIChwcm9wcyk7XG4gICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgIGFkZHJlc3NsaW5lMTogJycsXG4gICAgICBhZGRyZXNzbGluZTI6ICcnLFxuICAgICAgY2l0eTogJycsXG4gICAgICBzdGF0ZTogJycsXG4gICAgICB6aXA6ICcnLFxuICAgICAgcGhvbmU6ICcnLFxuICAgICAgZm9ybU51bTogJ2Zvcm0yJ1xuICAgIH1cbiAgICB0aGlzLmhhbmRsZUlucHV0ID0gdGhpcy5oYW5kbGVJbnB1dC5iaW5kKHRoaXMpO1xuICAgIHRoaXMuaGFuZGxlU3VibWl0ID0gdGhpcy5oYW5kbGVTdWJtaXQuYmluZCh0aGlzKTtcbiAgfVxuXG4gIGhhbmRsZUlucHV0IChldmVudCkge1xuICAgIGNvbnN0IHRhcmdldCA9IGV2ZW50LnRhcmdldDtcbiAgICBjb25zdCB2YWx1ZSA9IHRhcmdldC52YWx1ZTtcbiAgICBjb25zdCBwcm9wZXJ0eSA9IHRhcmdldC5uYW1lO1xuICAgIGxldCBuZXdTdGF0ZSA9IE9iamVjdC5hc3NpZ24oe30sIHRoaXMuc3RhdGUpO1xuICAgIG5ld1N0YXRlW3Byb3BlcnR5XSA9IHZhbHVlO1xuICAgIGNvbnNvbGUubG9nKG5ld1N0YXRlKTtcbiAgICB0aGlzLnNldFN0YXRlKG5ld1N0YXRlKTtcbiAgfVxuXG4gIGhhbmRsZVN1Ym1pdCAoZXZlbnQpIHtcbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIHRoaXMucHJvcHMuaGFuZGxlTmV4dCh0aGlzLnN0YXRlKTtcbiAgfVxuXG4gIHJlbmRlciAoKSB7XG4gICAgbGV0IGxhYmVsID0gWydBZGRyZXNzIExpbmUgMTogJywgJ0FkZHJlc3MgTGluZSAyOiAnLCAnQ2l0eTogJywgJ1N0YXRlOiAnLCAnWmlwOiAnLCAnUGhvbmU6ICddO1xuICAgIGxldCBwcm9wZXJ0aWVzID0gWydhZGRyZXNzbGluZTEnLCAnYWRkcmVzc2xpbmUyJywgJ2NpdHknLCAnc3RhdGUnLCAnemlwJywgJ3Bob25lJ107XG4gICAgbGV0IHR5cGVzID0gWyd0ZXh0JywgJ3RleHQnLCAndGV4dCcsICd0ZXh0JywgJ3RleHQnLCAndGV4dCddO1xuICAgIHJldHVybiAoXG5cbiAgICAgICAgICAgIDxmb3JtIG9uU3VibWl0PXt0aGlzLmhhbmRsZVN1Ym1pdH0+XG4gICAgICAgICAgICA8aDE+Rm9ybSAyPC9oMT5cbiAgICAgICAgICAgIHtsYWJlbC5tYXAoKGlucHV0LCBpbmRleCkgPT5cbiAgICAgICAgICAgICAgPFRleHRJbnB1dCBuYW1lPXtwcm9wZXJ0aWVzW2luZGV4XX1cbiAgICAgICAgICAgICAgdmFsdWU9e3RoaXMuc3RhdGVbcHJvcGVydGllc1tpbmRleF1dfVxuICAgICAgICAgICAgICBpbnB1dFR5cGU9e3R5cGVzW2luZGV4XX1cbiAgICAgICAgICAgICAgbGFiZWw9e2xhYmVsW2luZGV4XX1cbiAgICAgICAgICAgICAgY2hhbmdlPXt0aGlzLmhhbmRsZUlucHV0fVxuICAgICAgICAgICAgICBrZXk9e2luZGV4fVxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgICA8YnV0dG9uPk5leHQ8L2J1dHRvbj5cbiAgICAgICAgICAgIDwvZm9ybT5cbiAgICApXG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgRm9ybTI7Il19